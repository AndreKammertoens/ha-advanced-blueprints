blueprint:
  name: INVENTOCASA - PV Excess Optimizer
  description: "Automatically control your appliances based on excess power from your solar system"
  domain: automation
  input:
    automation_id:
      name: "Automation name"
      description: "IMPORTANT: Input the name of this automation here. The name must be unique!"
      selector:
        text:
    appliance_priority:
      name: "Appliance priority"
      description: "Appliances with a higher number are prioritized compared to appliances with a lower number."
      default: 1
      selector:
        number:
          min: 1
          max: 1000
          mode: box
          unit_of_measurement: "Priority level"


    export_power:
      name: "Export Power"
      description: "Sensor which contains your current home export power in watts. Must not be negative! For best results, this sensor should be updated at least every minute. 
      WARNING: This sensor must be the same for all your created automations based off this blueprint!"
      selector:
        entity:
          domain: sensor
          multiple: false
    pv_power:
      name: "PV Power"
      description: "Sensor which contains your current PV generated power in watts. Must not be negative! For best results, this sensor should be updated at least every minute.
      WARNING: This sensor must be the same for all your created automations based off this blueprint!"
      selector:
        entity:
          domain: sensor
          multiple: false
    load_power:
      name: "Load Power"
      description: "Sensor which contains your current load power (combined household appliance consumption without home battery charging consumption) in watts. Must not be negative! For best results, this sensor should be updated at least every minute.
      WARNING: This sensor must be the same for all your created automations based off this blueprint!
      NOTE: The combined household appliance consumption will always be prioritized, meaning that if you e.g. turn on your electric oven, and as a result the excess power is near zero, 
      your appliance with the lowest priority will be switched off (according to its On/Off swithc interval)."
      selector:
        entity:
          domain: sensor
          multiple: false


    home_battery_level:
      name: "Home battery level"
      description: "Sensor which represents the charge level of your home battery (in percent)
      WARNING: This sensor must be the same for all your created automations based off this blueprint!"
      selector:
        entity:
          domain: sensor
          multiple: false
    min_home_battery_level:
      name: "Minimum home battery level"
      description: "Minimum power level (in percent) of your home battery, before starting to switch on your appliance. (If home_battery_level < min_home_battery_level: Export Power will be considered for appliance switching) (If home_battery_level >= min_home_battery_level: PV Power will be considered for appliance switching)"
      default: 50
      selector:
        number:
          min: 0
          max: 100
          step: 5
          unit_of_measurement: "%"


    appliance_switch:
      name: "Appliance On/Off switch"
      description: "Switch to turn the appliance on/off. For wbec, create a mqtt switch for wbec/lp/1/enable"
      selector:
        entity:
          domain: switch
          multiple: false
    appliance_switch_interval:
      name: "Appliance On/Off switch interval"
      description: "Defines the minimum time (in minutes) before switching the appliance on/off again. Will also be used as the averaging interval for available excess power.
      Note: When first creating and executing your automation, it will most likely take the here defined time till your appliance can switch on. Even if enough excess solar is available beforehand.
      This is due to the excess_history getting populated with zeros at the beginning."
      default: 5
      selector:
        number:
          min: 1
          max: 60
          step: 1
          unit_of_measurement: min


    appliance_on_only:
      name: "Only-On-Appliance"
      description: "Tick this box if your appliance should only be turned on, and never off. Useful e.g. for washing machines, which should not be turned off even if there is not enough solar power anymore."
      default: False
      selector:
        boolean:
    dynamic_current_appliance:
      name: "Dynamic current control"
      description: "Tick this box if your appliance supports different current levels. Useful e.g. for wallboxes. If False, the appliance will only be switched on or off in relation to the PV excess."
      default: False
      selector:
        boolean:
    appliance_current_set_entity:
      name: "Appliance SetCurrent entity"
      description: "[Only relevant when dynamic current control is set] The number entity to which the calculated current will be sent. For wbec, create a MQTT number entity which points to wbec/lp/1/maxcurrent"
      default:
      selector:
        entity:
          domain: number
          multiple: false
    min_current:
      name: "Minimum dynamic current"
      description: "[Only relevant when dynamic current control is set] Minimum current per phase your appliance can handle. Calculated values below this will be set to 0A."
      default: 6
      selector:
        number:
          min: 0.1
          max: 16
          step: 0.1
          unit_of_measurement: A
    max_current:
      name: "Maximum dynamic current"
      description: "[Only relevant when dynamic current control is set] Maximum current per phase your appliance can handle. Calculated values above this will be set to 16A."
      default: 16
      selector:
        number:
          min: 0.1
          max: 16
          step: 0.1
          unit_of_measurement: A
    three_phase_appliance:
      name: "Three Phase Appliance"
      description: "Tick this box if you have a three-phase appliance AND your appliance is configured for three-phase power use. Otherwise untick the box."
      default: False
      selector:
        boolean:


    defined_current:
      name: "Appliance typical current draw"
      description: "Typical/expected current draw of your appliance. Only relevant for deciding how much excess is needed before turning the specific appliance on. 
      If your appliance supports dynamic current setting, set this to the same value as 'Minimum dynamic current'.
      Ampere = Watt/Volt"
      default: 6
      selector:
        number:
          min: 0.1
          max: 16
          step: 0.1
          unit_of_measurement: A
    actual_power:
      name: "Appliance actual power sensor"
      description: "Sensor which contains the current power consumption of the appliance in watts. For wbec, you can create a mqtt sensor which subscribes to wbec/lp/1/power"
      selector:
        entity:
          domain: sensor
          multiple: false



mode: single
trigger:
- platform: homeassistant
  event: start


action:
  - service: pyscript.pv_excess_control
    data:
      automation_id: !input automation_id
      appliance_priority: !input appliance_priority
      export_power: !input export_power
      pv_power: !input pv_power
      load_power: !input load_power
      home_battery_level: !input home_battery_level
      min_home_battery_level: !input min_home_battery_level
      dynamic_current_appliance: !input dynamic_current_appliance
      three_phase_appliance: !input three_phase_appliance
      min_current: !input min_current
      max_current: !input max_current
      appliance_switch: !input appliance_switch
      appliance_switch_interval: !input appliance_switch_interval
      appliance_current_set_entity: !input appliance_current_set_entity
      actual_power: !input actual_power
      defined_current: !input defined_current
      appliance_on_only: !input appliance_on_only